#+title: DSDM 0.1.0

* Headache-Free Dotfile Management!
~dsdm~ is designed as an alternative to more comprehensive dotfile tools like ~chezmoi~ or ~yadm~, as well as dead simple tools like ~stow~.
The goal is to be more fully featured than ~stow~, but easier and quicker to understand than ~chezmoi~ or ~yadm~.

** Building
To install, run:
#+begin_src shell
cargo install --git https://github.com/permania/dsdm.git
#+end_src

** Usage 
To view the available commands, use ~help~ or ~-h~:
#+begin_src shell
dsdm help
#+end_src
This will show you your options.

** Modules
To start using ~dsdm~, create your first module, this will also create the configuration directory at ~$HOME/.dsdm.d~
#+begin_src shell
dsdm mod create foo
#+end_src
This will create the ~foo~ module in ~/$HOME/.dsdm.d/foo/~.

See [[*Configuration][Configuration]] for information about configuring modules.

To delete a module, use ~destroy~:
#+begin_src shell
dsdm mod destroy foo
#+end_src
You will be prompted to confirm your decision, as it is not reversible.

To apply a module, use ~apply~:
#+begin_src shell
dsdm mod apply foo
#+end_src
This will write the enclosed files to their respective locations as defined in ~mod.yaml~.

** Configuration
To configure a module, edit its ~mod.yaml~ file.
#+begin_src shell
cd module/
ls
# mod.yaml
vim mod.yaml
#+end_src

*** Module File
Currently, the available fields in ~mod.yaml~ are ~exports~, ~include~, and ~templates~.
#+begin_src yaml
exports:
  - source: "foo"
    target: "bar"

include:
  - module: "whiskey"
    path: "tango"

templates:
  eta:
    tau: "phi"
#+end_src
For more information on editing this file, read the autogenerated comments.

*** Global File
In the root of the configuration directory you'll find ~global.yaml~, this file is for settings that aren't specific to any module.

Currently there are 2 available fields, ~templates~ and ~delimiters~.
~templates~ behaves exactly like the ~templates~ field in ~mod.yaml~ but can be accessed from any file.
~delimiters~ changes the delimiters used by the template engine, if the default ~!(~ and ~)!~ conflict with your file's syntax, you can change it.

** Subdirectories
All subcommands pertaining to modules have the ~-s~ option to specify subdirectories.
You may want to organize your modules into directories instead of having them all adjacent, you can achieve this with ~-s~:
#+begin_src shell
dsdm mod create alacritty -s programs/term
#+end_src
This will create the ~alacritty~ module in ~$HOME/.dsdm.d/programs/term/alacritty/~.

To delete or apply modules in subdirectories, you need to specify where to find them:
#+begin_src shell
dsdm mod apply alacritty -s programs/term
dsdm mod destroy alacritty -s programs/term
#+end_src

-----

* Issues
If you find a bug or want a feature, open an issue, I'll likely add it!
